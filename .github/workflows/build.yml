name: Build Wiresmash with CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Install the dependencies
      run: sudo apt install build-essential libsfml-dev

    # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    - name: Configure CMake
      # the equivalent of `cmake -S ./ -B ./build/` in the `README`
      run: cmake -S ${{github.workspace}} -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    # Build your program with the given configuration
    - name: Build the application
      # the equivalent of `cmake --build ./build/` in the `README`
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # Execute tests defined by the CMake configuration.
    # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
